name: Docker Build and Push to GHCR

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Name of the Docker image (without ghcr.io/)'
        default: qubership-integration-engine
        # required: true
        type: string
      dockerfile_path:
        description: 'Path to the Dockerfile'
        # required: true
        type: string
      context_path:
        description: 'Path to the build context'
        # required: true
        type: string
      push:
        description: 'Push the image to GHCR'
        required: false
        type: boolean
        default: true
    # outputs:
    #   built_tags:
    #     description: "All generated Docker image tags"
    #     value: ${{ jobs.build-and-push.outputs.built_tags }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    outputs:
      built_tags: ${{ steps.collect-tags.outputs.built_tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3


      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
            distribution: 'temurin'
            java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
            path: ~/.m2/repository
            key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
                maven-${{ runner.os }}-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Check if JAR file exists
        run: ls -la target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: ${{ inputs.push }}
        uses: docker/login-action@v2
        with:
        #   registry: ghcr.io
        #   username: ${{ github.actor }}
        #   password: ${{ secrets.GITHUB_TOKEN }}
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
        #   images: ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}
          images: ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image_name }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Check Dockerfile existence
        run: ls -la

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          # context: ${{ inputs.context_path }}
          # file: ${{ inputs.dockerfile_path }}
          context: .
          file: ./Dockerfile
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Collect built tags for output
        id: collect-tags
        run: echo "built_tags=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT